trigger:
  batch: true
  branches:
    include:
    - "*"

jobs:

- job: "Test"
  strategy:
    matrix:
      Python36Linux:
        imageName: "ubuntu-latest"
        python.version: "3.6"
      Python36Windows:
        imageName: "windows-2019"
        python.version: "3.6"
      Python37Linux:
        imageName: "ubuntu-latest"
        python.version: "3.7"
      Python37Windows:
        imageName: "windows-latest"
        python.version: "3.7"
      Python37Mac:
        imageName: "macos-latest"
        python.version: "3.7"
      Python38Linux:
        imageName: "ubuntu-latest"
        python.version: "3.8"
      Python38Windows:
        imageName: "windows-latest"
        python.version: "3.8"
      Python38Mac:
        imageName: "macos-latest"
        python.version: "3.8"
      Python39Linux:
        imageName: "ubuntu-latest"
        python.version: "3.9"
      Python39Windows:
        imageName: "windows-latest"
        python.version: "3.9"
      Python39Mac:
        imageName: "macos-latest"
        python.version: "3.9"
      Python310Linux:
        imageName: "ubuntu-latest"
        python.version: "3.10"
      Python310Windows:
        imageName: "windows-latest"
        python.version: "3.10"
      Python310Mac:
        imageName: "macos-latest"
        python.version: "3.10"
      Python311Linux:
        imageName: "ubuntu-latest"
        python.version: "3.11"
      Python311Windows:
        imageName: "windows-latest"
        python.version: "3.11"
      Python311Mac:
        imageName: "macos-latest"
        python.version: "3.11"
    maxParallel: 4
  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "$(python.version)"
      architecture: "x64"

  - script: |
      python -m pip install -U build pip setuptools
      python -m pip install -U -r requirements.txt
      python -m build -s
    displayName: "Build sdist"

  - script: |
      python -m mypy weasel
    displayName: "Run mypy"
    condition: ne(variables["python.version"], "3.6")

  - task: DeleteFiles@1
    inputs:
      contents: "weasel"
    displayName: "Delete source directory"

  - task: DeleteFiles@1
    inputs:
      contents: "*.egg-info"
    displayName: "Delete egg-info directory"

  - script: |
      python -m pip freeze > installed.txt
      python -m pip uninstall -y -r installed.txt
    displayName: "Uninstall all packages"

  - bash: |
      SDIST=$(python -c 'import os;print(os.listdir("./dist")[-1])' 2>&1)
      python -m pip install dist/$SDIST
    displayName: "Install from sdist"

  - bash: |
      python -W error -c "import weasel"
    displayName: "Test import"

  - bash: |
      python -m pip install -r requirements.txt
    displayName: "Install test requirements"

  - script: |
      python -m pytest --pyargs weasel
    displayName: "Run tests"
